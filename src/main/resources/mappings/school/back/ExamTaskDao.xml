<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it313.elm.school.back.dao.ExamTaskDao">
    
	<sql id="examTaskColumns">
		a.id AS "id",
		a.et_title AS "etTitle",
		a.et_subject_ids AS "etSubjectIds",
		a.et_subject_names AS "etSubjectNames",
		a.et_type as "type",
		a.et_org_type AS "etOrgType",
		a.et_org_ids AS "etOrgIds",
		a.et_org_names AS "etOrgNames",
		a.create_time AS "createTime",
		a.create_user_id AS "createUserId",
		a.create_user_name AS "createUserName",
		a.update_time AS "updateTime",
		a.remarks AS "remarks",
		a.state AS "state",
		a.update_user_id AS "updateUserId",
		a.update_user_name AS "updateUserName",
		a.school_org_id as "schoolOrgId"
	</sql>
	
	<sql id="examTaskJoins">
	</sql>
    
	<select id="get" resultType="com.it313.elm.school.back.entity.ExamTask">
		SELECT 
			<include refid="examTaskColumns"/>
		FROM tb_exam_task a
			<include refid="examTaskJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.it313.elm.school.back.entity.ExamTask">
		SELECT 
			<include refid="examTaskColumns"/>
		FROM tb_exam_task a
			<include refid="examTaskJoins"/>
		<where>
		    1=1
			<if test="etOrgIds != null and etOrgIds!=''">
				AND EXISTS (SELECT 1 FROM ${@com.it313.big.common.persistence.BaseEntity@BIG_COMMON_TP}.SYS_ORG B ,sys_org o, tb_exam_task_detail etd WHERE o.LEFT_VALUE &gt;= B.LEFT_VALUE AND o.RIGHT_VALUE &lt;= B.RIGHT_VALUE AND B.ID=#{etOrgIds} and etd.task_id = a.id and o.id = etd.org_id)
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_time desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.it313.elm.school.back.entity.ExamTask">
		SELECT 
			<include refid="examTaskColumns"/>
		FROM tb_exam_task a
			<include refid="examTaskJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO tb_exam_task(
			id,
			et_title,
			et_subject_ids,
			et_subject_names,
			et_type,
			et_org_type,
			et_org_ids,
			et_org_names,
			create_time,
			create_user_id,
			create_user_name,
			update_time,
			remarks,
			state,
			update_user_id,
			update_user_name,
			school_org_id
		) VALUES (
			#{id},
			#{etTitle},
			#{etSubjectIds},
			#{etSubjectNames},
			#{type},
			#{etOrgType},
			#{etOrgIds},
			#{etOrgNames},
			#{createTime},
			#{createUserId},
			#{createUserName},
			#{updateTime},
			#{remarks},
			#{state},
			#{updateUserId},
			#{updateUserName},
			#{schoolOrgId}
		)
	</insert>
	
	<update id="update">
		UPDATE tb_exam_task 	
			<trim prefix="SET" suffixOverrides="," suffix=" where id = #{id} ">	
			<if test="etTitle != null and etTitle != ''">
				et_title = #{etTitle},
			</if>
			<if test="etSubjectIds != null and etSubjectIds != ''">
				et_subject_ids = #{etSubjectIds},
			</if>
			<if test="etSubjectNames != null and etSubjectNames != ''">
				et_subject_names = #{etSubjectNames},
			</if>
			<if test="type != null and type != ''">
				et_type = #{type},
			</if>
			<if test="etOrgType != null and etOrgType != ''">
				et_org_type = #{etOrgType},
			</if>
			<if test="etOrgIds != null and etOrgIds != ''">
				et_org_ids = #{etOrgIds},
			</if>
			<if test="etOrgNames != null and etOrgNames != ''">
				et_org_names = #{etOrgNames},
			</if>
			<if test="updateTime != null and updateTime != ''">
				update_time = #{updateTime},
			</if>
			<if test="remarks != null and remarks != ''">
				remarks = #{remarks},
			</if>
			<if test="state != null and state != ''">
				state = #{state},
			</if>
			<if test="updateUserId != null and updateUserId != ''">
				update_user_id = #{updateUserId},
			</if>
			<if test="updateUserName != null and updateUserName != ''">
				update_user_name = #{updateUserName},
			</if>
			</trim>
	</update>
	
	<update id="batchDelete">
		DELETE FROM tb_exam_task
		WHERE id in (
		<foreach collection="list" item="item" index="index" separator="," >  
	        #{item.id}
	    </foreach>  
	    )
	</update>
	
</mapper>